{"ast":null,"code":"var _jsxFileName = \"/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/Autocomplete.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport usePlanetSearch from '../../hooks/usePlanetSearch';\nimport AutocompleteInput from './AutocompleteInput';\nimport SuggestionList from './SuggestionList';\nimport './Autocomplete.css';\nimport { debounce } from '../../utils/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const inputRef = useRef(null);\n  const performSearch = searchTerm => {\n    // This is where you can perform the actual search operation.\n    // You may want to call your usePlanetSearch hook here.\n    // For now, let's just log the search term.\n    console.log('Performing search for:', searchTerm);\n  };\n  const debouncedSearch = debounce(performSearch, 500);\n  const debouncedSearchTerm = debounce(searchTerm, 500);\n  const {\n    planets,\n    isLoading,\n    isError\n  } = usePlanetSearch(debouncedSearchTerm);\n  useEffect(() => {\n    setSearchTerm(debouncedSearchTerm);\n  }, [debouncedSearchTerm]);\n  const handleInputChange = event => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n\n    // Invoke the debounced search function with the new search term\n    debouncedSearch(newSearchTerm);\n    setSelectedPlanet(null);\n  };\n\n  //   const handleInputChange = (event) => {\n  //     setSearchTerm(event.target.value);\n  //     setSelectedPlanet(null);\n  //   };\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `autocomplete-container ${isFocused ? 'focused' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(AutocompleteInput, {\n      searchTerm: searchTerm,\n      handleInputChange: handleInputChange,\n      handleFocus: handleFocus,\n      handleBlur: handleBlur,\n      inputRef: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isFocused && /*#__PURE__*/_jsxDEV(SuggestionList, {\n      searchTerm: debouncedSearchTerm,\n      planets: planets,\n      isLoading: isLoading,\n      isError: isError,\n      handleSelectPlanet: setSelectedPlanet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), selectedPlanet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-planet\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Planet: \", selectedPlanet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"3u9mhmgEGkesQr+ARxj6Nf49Dlk=\", false, function () {\n  return [usePlanetSearch];\n});\n_c = Autocomplete;\nexport default Autocomplete;\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useRef","useEffect","usePlanetSearch","AutocompleteInput","SuggestionList","debounce","jsxDEV","_jsxDEV","Autocomplete","_s","searchTerm","setSearchTerm","isFocused","setIsFocused","selectedPlanet","setSelectedPlanet","inputRef","performSearch","console","log","debouncedSearch","debouncedSearchTerm","planets","isLoading","isError","handleInputChange","event","newSearchTerm","target","value","handleFocus","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSelectPlanet","name","_c","$RefreshReg$"],"sources":["/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/Autocomplete.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport usePlanetSearch from '../../hooks/usePlanetSearch';\nimport AutocompleteInput from './AutocompleteInput';\nimport SuggestionList from './SuggestionList';\nimport './Autocomplete.css';\nimport { debounce } from '../../utils/debounce';\n\nconst Autocomplete = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const inputRef = useRef(null);\n\n  const performSearch = (searchTerm) => {\n    // This is where you can perform the actual search operation.\n    // You may want to call your usePlanetSearch hook here.\n    // For now, let's just log the search term.\n    console.log('Performing search for:', searchTerm);\n  };\n\n  const debouncedSearch = debounce(performSearch, 500);\n\n  const debouncedSearchTerm = debounce(searchTerm, 500);\n  const { planets, isLoading, isError } = usePlanetSearch(debouncedSearchTerm);\n\n  useEffect(() => {\n    setSearchTerm(debouncedSearchTerm);\n  }, [debouncedSearchTerm]);\n\n  const handleInputChange = (event) => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n\n    // Invoke the debounced search function with the new search term\n    debouncedSearch(newSearchTerm);\n\n    setSelectedPlanet(null);\n  };\n  \n//   const handleInputChange = (event) => {\n//     setSearchTerm(event.target.value);\n//     setSelectedPlanet(null);\n//   };\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n\n  return (\n    <div className={`autocomplete-container ${isFocused ? 'focused' : ''}`}>\n      <AutocompleteInput\n        searchTerm={searchTerm}\n        handleInputChange={handleInputChange}\n        handleFocus={handleFocus}\n        handleBlur={handleBlur}\n        inputRef={inputRef}\n      />\n      {isFocused && (\n        <SuggestionList\n          searchTerm={debouncedSearchTerm}\n          planets={planets}\n          isLoading={isLoading}\n          isError={isError}\n          handleSelectPlanet={setSelectedPlanet}\n        />\n      )}\n      {selectedPlanet && (\n        <div className=\"selected-planet\">\n          <p>Selected Planet: {selectedPlanet.name}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}