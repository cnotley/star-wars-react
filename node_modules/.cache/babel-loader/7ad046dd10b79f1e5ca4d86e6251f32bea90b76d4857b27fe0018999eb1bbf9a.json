{"ast":null,"code":"var _jsxFileName = \"/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/Autocomplete.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport usePlanetSearch from '../../hooks/usePlanetSearch';\nimport AutocompleteInput from './AutocompleteInput';\nimport SuggestionList from './SuggestionList';\nimport './Autocomplete.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Autocomplete = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(searchTerm);\n  const inputRef = useRef(null);\n\n  // Debounce search term to limit API calls\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 500);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [searchTerm]);\n\n  // Hook that uses the debounced search term state to fetch data\n  const {\n    planets,\n    isLoading,\n    isError\n  } = usePlanetSearch(debouncedSearchTerm);\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n    setSelectedPlanet(null);\n  };\n  const handleFocus = () => setIsFocused(true);\n  const handleBlur = () => setIsFocused(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `autocomplete-container ${isFocused ? 'focused' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(AutocompleteInput, {\n      searchTerm: searchTerm,\n      handleInputChange: handleInputChange,\n      handleFocus: handleFocus,\n      handleBlur: handleBlur,\n      inputRef: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isFocused && /*#__PURE__*/_jsxDEV(SuggestionList, {\n      isFocused: isFocused,\n      searchTerm: searchTerm,\n      planets: planets,\n      isLoading: isLoading,\n      isError: isError,\n      handleSelectPlanet: setSelectedPlanet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), selectedPlanet && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-planet\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Planet: \", selectedPlanet.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Autocomplete, \"BWF0cWfZC/e3pnYPqCi0PMueGeY=\", false, function () {\n  return [usePlanetSearch];\n});\n_c = Autocomplete;\nexport default Autocomplete;\nvar _c;\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"names":["React","useState","useRef","useEffect","usePlanetSearch","AutocompleteInput","SuggestionList","jsxDEV","_jsxDEV","Autocomplete","_s","searchTerm","setSearchTerm","isFocused","setIsFocused","selectedPlanet","setSelectedPlanet","debouncedSearchTerm","setDebouncedSearchTerm","inputRef","handler","setTimeout","clearTimeout","planets","isLoading","isError","handleInputChange","event","target","value","handleFocus","handleBlur","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSelectPlanet","name","_c","$RefreshReg$"],"sources":["/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/Autocomplete.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport usePlanetSearch from '../../hooks/usePlanetSearch';\nimport AutocompleteInput from './AutocompleteInput';\nimport SuggestionList from './SuggestionList';\nimport './Autocomplete.css';\n\nconst Autocomplete = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [selectedPlanet, setSelectedPlanet] = useState(null);\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(searchTerm);\n  const inputRef = useRef(null);\n\n  // Debounce search term to limit API calls\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 500);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [searchTerm]);\n\n  // Hook that uses the debounced search term state to fetch data\n  const { planets, isLoading, isError } = usePlanetSearch(debouncedSearchTerm);\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n    setSelectedPlanet(null);\n  };\n\n  const handleFocus = () => setIsFocused(true);\n  const handleBlur = () => setIsFocused(false);\n\n  return (\n    <div className={`autocomplete-container ${isFocused ? 'focused' : ''}`}>\n      <AutocompleteInput\n        searchTerm={searchTerm}\n        handleInputChange={handleInputChange}\n        handleFocus={handleFocus}\n        handleBlur={handleBlur}\n        inputRef={inputRef}\n      />\n      {isFocused && (\n        <SuggestionList\n          isFocused={isFocused}\n          searchTerm={searchTerm}\n          planets={planets}\n          isLoading={isLoading}\n          isError={isError}\n          handleSelectPlanet={setSelectedPlanet}\n        />\n      )}\n      {selectedPlanet && (\n        <div className=\"selected-planet\">\n          <p>Selected Planet: {selectedPlanet.name}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Autocomplete;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}