{"ast":null,"code":"var _jsxFileName = \"/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/SuggestionList.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SuggestionItem from './SuggestionItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuggestionList = ({\n  isFocused,\n  searchTerm,\n  planets,\n  isLoading,\n  isError,\n  handleSelectPlanet,\n  handleCloseSuggestionList\n}) => {\n  if (!isFocused || !searchTerm) {\n    return null;\n  }\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }, this);\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Error loading suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }, this);\n  } else if (!isLoading && planets.length === 0 && searchTerm.length >= 2) {\n    content = /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"No planets found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = planets.map(planet => /*#__PURE__*/_jsxDEV(SuggestionItem, {\n      planet: planet,\n      handleSelectPlanet: handleSelectPlanet\n    }, planet.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"autocomplete-list\",\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_c = SuggestionList;\nSuggestionList.propTypes = {\n  isFocused: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  planets: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })),\n  isLoading: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n  handleSelectPlanet: PropTypes.func.isRequired,\n  handleCloseSuggestionList: PropTypes.func.isRequired\n};\nexport default SuggestionList;\nvar _c;\n$RefreshReg$(_c, \"SuggestionList\");","map":{"version":3,"names":["React","PropTypes","SuggestionItem","jsxDEV","_jsxDEV","SuggestionList","isFocused","searchTerm","planets","isLoading","isError","handleSelectPlanet","handleCloseSuggestionList","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","planet","name","className","_c","propTypes","bool","isRequired","string","arrayOf","shape","func","$RefreshReg$"],"sources":["/Users/christophernotley/my-webpack-react-app/src/components/Autocomplete/SuggestionList.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport SuggestionItem from './SuggestionItem';\n\nconst SuggestionList = ({ isFocused, searchTerm, planets, isLoading, isError, handleSelectPlanet, handleCloseSuggestionList }) => {\n  if (!isFocused || !searchTerm) {\n    return null;\n  }\n\n  let content;\n\n  if (isLoading) {\n    content = <li>Loading...</li>;\n  } else if (isError) {\n    content = <li>Error loading suggestions</li>;\n  } else if (!isLoading && planets.length === 0 && searchTerm.length >= 2) {\n    content = <li>No planets found</li>;\n  } else {\n    content = planets.map((planet) => (\n      <SuggestionItem key={planet.name} planet={planet} handleSelectPlanet={handleSelectPlanet} />\n    ));\n  }\n\n  return <ul className=\"autocomplete-list\">{content}</ul>;\n};\n\nSuggestionList.propTypes = {\n  isFocused: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  planets: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    })\n  ),\n  isLoading: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n  handleSelectPlanet: PropTypes.func.isRequired,\n  handleCloseSuggestionList: PropTypes.func.isRequired,\n  \n};\n\nexport default SuggestionList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC,OAAO;EAAEC,SAAS;EAAEC,OAAO;EAAEC,kBAAkB;EAAEC;AAA0B,CAAC,KAAK;EAChI,IAAI,CAACN,SAAS,IAAI,CAACC,UAAU,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,IAAIM,OAAO;EAEX,IAAIJ,SAAS,EAAE;IACbI,OAAO,gBAAGT,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC/B,CAAC,MAAM,IAAIR,OAAO,EAAE;IAClBG,OAAO,gBAAGT,OAAA;MAAAU,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9C,CAAC,MAAM,IAAI,CAACT,SAAS,IAAID,OAAO,CAACW,MAAM,KAAK,CAAC,IAAIZ,UAAU,CAACY,MAAM,IAAI,CAAC,EAAE;IACvEN,OAAO,gBAAGT,OAAA;MAAAU,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACrC,CAAC,MAAM;IACLL,OAAO,GAAGL,OAAO,CAACY,GAAG,CAAEC,MAAM,iBAC3BjB,OAAA,CAACF,cAAc;MAAmBmB,MAAM,EAAEA,MAAO;MAACV,kBAAkB,EAAEA;IAAmB,GAApEU,MAAM,CAACC,IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2D,CAC5F,CAAC;EACJ;EAEA,oBAAOd,OAAA;IAAImB,SAAS,EAAC,mBAAmB;IAAAT,QAAA,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACzD,CAAC;AAACM,EAAA,GApBInB,cAAc;AAsBpBA,cAAc,CAACoB,SAAS,GAAG;EACzBnB,SAAS,EAAEL,SAAS,CAACyB,IAAI,CAACC,UAAU;EACpCpB,UAAU,EAAEN,SAAS,CAAC2B,MAAM,CAACD,UAAU;EACvCnB,OAAO,EAAEP,SAAS,CAAC4B,OAAO,CACxB5B,SAAS,CAAC6B,KAAK,CAAC;IACdR,IAAI,EAAErB,SAAS,CAAC2B,MAAM,CAACD;EACzB,CAAC,CACH,CAAC;EACDlB,SAAS,EAAER,SAAS,CAACyB,IAAI,CAACC,UAAU;EACpCjB,OAAO,EAAET,SAAS,CAACyB,IAAI,CAACC,UAAU;EAClChB,kBAAkB,EAAEV,SAAS,CAAC8B,IAAI,CAACJ,UAAU;EAC7Cf,yBAAyB,EAAEX,SAAS,CAAC8B,IAAI,CAACJ;AAE5C,CAAC;AAED,eAAetB,cAAc;AAAC,IAAAmB,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}